;; -*- lisp -*-

(defpoll ssid
    :interval "2s"
    `popup_panel/scripts/wifi.sh --ssid`)

(defpoll kanata_status
    :interval "2s"
    `popup_panel/scripts/kanata.sh --status`)

(defpoll brightness
    :interval "10s"
    `popup_panel/scripts/brightness.sh --get`)

(defpoll zram_status
    :interval "2s"
    `popup_panel/scripts/zram.sh --used`)

(defpoll volume
    :interval "5s"
    `popup_panel/scripts/volume.sh --get`)

(defpoll hotspot_ssid
    :interval "2s"
    `popup_panel/scripts/hotspot.sh --ssid`)

(defpoll backup_dev_status
    :interval "2s"
    `popup_panel/scripts/backup.sh --status`)

(defpoll updates_running
    :interval "2s"
    `popup_panel/scripts/update.sh --status`)

(defwindow popup-panel
    :stacking "fg"
    :windowtype "normal"
    :wm-ignore true
    :geometry (geometry
               :anchor "top right"
               :width "29.5%"
               :height "60%"
               :x "-0.9%"
               :y "4%")
    :window-type "dock"
    (popup-panel-layout))

(defwidget popup-panel-layout []
  (eventbox
   :class "popup-panel"
   :onhoverlost `eww close popup-panel`
   (box
    :orientation "vertical"
    :space-evenly false
    :spacing 30
    (box
     :class "sliders-wrapper"
     (popup-panel-row-1))
    (button-rows))))

(defwidget button-rows []
  (box
   :class "button-rows-wrapper"
   :orientation "vertical"
   :space-evenly false
   :spacing 40
   (popup-panel-row-2)
   (secondary-buttons-rows)))

(defwidget secondary-buttons-rows []
  (box
   :class "secondary-buttons-rows-wrapper"
   :orientation "vertical"
   :space-evenly false
   :spacing 25
   (popup-panel-row-3)
   (popup-panel-row-4)))

(defwidget popup-panel-row-1 []
  (box
   :class "row-1"
   :orientation "vertical"
   :spacing 20
   (popup-panel-brightness)
   (popup-panel-volume)))

(defwidget popup-panel-row-2 []
  (box
   :class "row-2"
   :spacing 40
   (wifi-toggle-button)
   (hotspot-toggle-button)
   (kanata-toggle-button)))

(defwidget popup-panel-row-3 []
  (box
   :class "row-3"
   (update-fixed-action-button)))

(defwidget popup-panel-row-4 []
  (box
   :class "row-4"
   :space-evenly false
   :spacing 40
   :halign "fill"
   (backup-fixed-action-button)
   (zram-toggle-button)))

(defwidget popup-panel-brightness []
  (box
   (overlay
    (scale :value brightness :min 1 :max 100
           :onchange `popup_panel/scripts/brightness.sh --set {}`)
    (box
     :spacing 30
     (label :class "icon" :text "󰃞")
     (label :text "Brightness")
     (label :class "icon" :text "󰃠")))))

(defwidget popup-panel-volume []
  (box
   :style "margin-right: 50px"
   (overlay
    (scale :value volume :min 0 :max 150
           :onchange `popup_panel/scripts/volume.sh --set {}`)
    (box
     :spacing 30
     (label :class "icon" :text "󰝞")
     (label :text "Volume")
     (label :class "icon" :text "󰝝")))))

(defwidget wifi-toggle-button []
    (toggle-button
     :class "action-button ${ssid == '' ? '' : 'active'}"
     :onclick "popup_panel/scripts/wifi.sh --toggle"
     :icon " " :caption "${ssid == '' ? 'WiFi' : ssid}"))

(defwidget hotspot-toggle-button []
    (toggle-button
     :class "action-button ${hotspot_ssid == '' ? '' : 'active'}"
     :onclick "popup_panel/scripts/hotspot.sh --toggle"
     :icon "󰀃" :caption "${hotspot_ssid == '' ? 'HotSpot' : hotspot_ssid}"))

(defwidget kanata-toggle-button  []
    (toggle-button-tristate
     :class "action-button  ${kanata_status == 'off' ? '' : 'active'}"
     :onclick "popup_panel/scripts/kanata.sh --toggle"
     :onrightclick ""
     :icon "󰌌" :caption kanata_status))

(defwidget zram-toggle-button []
    (toggle-button
     :class "action-button zram-button ${zram_status == '' ? '' : 'active'}"
     :onclick "popup_panel/scripts/zram.sh --toggle"
     :icon "󰍛" :caption "${zram_status == '' ? 'ZRam' : zram_status}"))

(defwidget update-fixed-action-button []
  (fixed-action-button
   :class "action-button update-button active"
   :onclick "${updates_running == '0' ? 'popup_panel/scripts/update.sh --run' : ''}"
   :hexpand false
   :icon "󰚰" :caption "${updates_running == '0' ? 'Update Sys' : 'Updates Running'}"))

(defwidget backup-fixed-action-button []
  (fixed-action-button
   :class "action-button backup-button ${backup_dev_status == '0' ? '' : 'active'}"
   :onclick "${backup_dev_status == '1' ? 'popup_panel/scripts/backup.sh --run-backup' : ''}"
   :hexpand true
   :icon " " :caption "${backup_dev_status == '1' ? 'Device Ready' : backup_dev_status == '2' ? 'In Progress' : 'No Device'}"))

(defwidget toggle-button
    [class onclick icon caption]
    (toggle-button-tristate
     :class class
     :onclick onclick :onrightclick ""
     :icon icon :caption caption))

(defwidget toggle-button-tristate
    [class onclick onrightclick icon caption]
    (button
     :class class
     :onclick onclick :onrightclick onrightclick
     (box
      :valign "center"
      :orientation "vertical"
      (label :class "icon" :text icon)
      (label :text caption))))

(defwidget fixed-action-button
    [class onclick icon caption hexpand]
    (button
     :class class
     :onclick onclick
     :hexpand hexpand
     (box
      :halign "center"
      :space-evenly false
      :spacing 15
      (label :class "icon" :text icon)
      (label :text caption))))
